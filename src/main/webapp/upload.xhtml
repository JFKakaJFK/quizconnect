<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://xmlns.jcp.org/jsf/core"
                template="/WEB-INF/templates/main.xhtml">
    <ui:define name ="content">
        <h:form id="form" method="POST" enctype="multipart/form-data" action="/avatar">
            <!--
            <input type="file" name="file" />
            <input type="submit" value="Upload" />
            -->

            <input type="file" name="file" id="upload" />
            <p id="msg"></p>

            <h:panelGroup layout="block" id="text">
                #{uploadBean.type}
            </h:panelGroup>

            <h:commandButton styleClass="render jsf-hide">
                <f:ajax execute="@none" render="text"/>
            </h:commandButton>

        </h:form>

        <script>
            "use strict"

            const upload = document.querySelector('#upload');
            const msg = document.querySelector('#msg');
            const render = document.querySelector('.render');
            const form = document.querySelector('#form');

            msg.innerHTML = 'no file'

            function showMsg(message){
                msg.innerHTML = `${message}`;
            }

            upload.addEventListener('change', handleUpload);



            function postData(url = ``, data = {}, type = 'application/json') {
                // Default options are marked with *
                return fetch(url, {
                    method: "POST", // *GET, POST, PUT, DELETE, etc.
                    mode: "cors", // no-cors, cors, *same-origin
                    cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
                    credentials: "same-origin", // include, *same-origin, omit
                    headers: {
                        "Content-Type": type,
                        // "Content-Type": "application/x-www-form-urlencoded",
                    },
                    redirect: "follow", // manual, *follow, error
                    referrer: "no-referrer", // no-referrer, *client
                    body: JSON.stringify(data), // body data type must match "Content-Type" header
                })
                    .then(response => response.json())
                    .then(data => {
                        render.click();
                        return data
                    }); // parses JSON response into native Javascript objects
            }

            async function sendData(url, data) {
                let formData  = new FormData(form);

                for(let name in data) {
                    formData.append(name, data[name]);
                }

                console.log("hello");
                console.log(formData.get("name"));

                await fetch(url, {
                    method: 'POST',
                    body: formData
                }).then(response => response.json());
            }

            async function handleUpload(){
                console.log('event');
                const file = upload.files[0];
                let text = `File is: ${file.name} of type ${file.type}, ${file.size}`;
                console.log(text);
                showMsg(text);

                await sendData(`/avatar`, file)
                    .then(data => {
                        console.log(JSON.stringify(data));
                        console.log()
                        render.click();
                    }) // JSON-string from `response.json()` call
                    .catch(error => console.error(error));

                render.click();
            }
        </script>
    </ui:define>
</ui:composition>