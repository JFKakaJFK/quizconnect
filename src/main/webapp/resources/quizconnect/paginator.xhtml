<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:cc="http://java.sun.com/jsf/composite"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xml:lang="en"
      lang="en">
    <cc:interface>

        <!--=============================================

        The paginator component simply displays a spinner
        and a button to load more

        Params:

        - paginator ... paginator to use
        - loadClass ... className used to trigger load by JS

        ==============================================-->
        <cc:attribute name="paginator" required="true" type="at.qe.sepm.skeleton.utils.ScrollPaginator"/>
        <cc:attribute name="loadClass" required="false" default="load" />
        <cc:attribute name="update" required="true" />

    </cc:interface>

    <cc:implementation>
        <ui:fragment rendered="#{!cc.attrs.paginator.initialized}">
            <div class="ScrollPaginator ScrollPaginator-loader-wrapper">
                <div class="ScrollPaginator ScrollPaginator-loader-content">

                    <span class="ScrollPaginator ScrollPaginator-loader"></span>
                    <h:commandButton value="Show more" action="#{cc.attrs.paginator.initNext}" rendered="#{!cc.attrs.paginator.initialized}" styleClass="#{cc.attrs.loadClass}  btn btn-primary">
                        <f:ajax execute="@this" render="@this #{cc.attrs.update}"/>
                    </h:commandButton>

                </div>
            </div>
            <script type="text/javascript">
              // restart loader on each render (not a nice solution, but better than always listening for all scroll events)
              if(typeof sl !== "undefined") sl.init();
            </script>
        </ui:fragment>
    </cc:implementation>
</html>