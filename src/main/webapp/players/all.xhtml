<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:p="http://xmlns.jcp.org/jsf/passthrough"
                xmlns:qc="http://java.sun.com/jsf/composite/quizconnect"
                template="/WEB-INF/templates/main.xhtml">

    <ui:define name="title">All players</ui:define>

    <ui:define name="site-specific-css">
       <!-- <link rel="stylesheet" href="../resources/main.css" /> TODO -->
    </ui:define>

    <ui:define name ="content">
        <h:form p:autocomplete="off" id="form" enctype="multipart/form-data">

            <h:panelGroup layout="block" styleClass="searchbar" id="searchbar">

                <h:inputText id="searchPrase" p:autocomplete="nein-danke-bitte-nicht" p:placeholder="Search" value="#{allPlayersBean.searchPhrase}" styleClass="form-control searchbar-search">
                    <f:ajax listener="#{allPlayersBean.handleSearch}" event="keyup" execute="@this" render="players"/>
                </h:inputText>

                <ui:fragment rendered="#{sessionInfoBean.hasRole('MANAGER')}">
                    <h:commandButton rendered="#{allPlayersBean.onlyByManager}" value="All Players" styleClass="btn btn-secondary searchbar-action">
                        <f:ajax listener="#{allPlayersBean.setOnlyByManager(false)}" render="searchbar players"/>
                    </h:commandButton>
                    <h:commandButton rendered="#{!allPlayersBean.onlyByManager}" value="My Players" styleClass="btn btn-secondary searchbar-action">
                        <f:ajax listener="#{allPlayersBean.setOnlyByManager(true)}" render="searchbar players"/>
                    </h:commandButton>
                </ui:fragment>

                <h:commandButton styleClass="btn btn-secondary searchbar-action" p:data-toggle="modal" p:data-target="#addPlayer" value="Add Player" rendered="#{sessionInfoBean.hasRole('MANAGER')}">
                    <f:ajax execute="@this" render=":modals:addPlayer:footer :modals:addPlayer:body"/>
                </h:commandButton>

            </h:panelGroup>

            <h:panelGroup id="players" layout="block">
                <h:panelGroup class="collection" layout="block">
                    <ui:repeat value="#{allPlayersBean.paginator.parts}" var="part">
                        <ui:repeat value="#{part.items}" var="player">

                            <qc:playerbox player="#{player}">

                                <h:commandLink styleClass="box-action" p:data-toggle="modal" p:data-target="#deletePlayer"
                                               rendered="#{allPlayersBean.isDeletable(player)}">
                                    <i data-feather="trash"></i>
                                    <f:ajax execute="@this" render="@none"/>
                                    <f:setPropertyActionListener value="#{player}" target="#{playerDetailController.player}"/>
                                </h:commandLink>

                                <h:commandLink styleClass="box-action" p:data-toggle="modal" p:data-target="#editPlayer"
                                               rendered="#{allPlayersBean.isEditable(player)}">
                                    <i data-feather="edit-3"></i>
                                    <f:ajax execute="@this" render="@none"/>
                                    <f:setPropertyActionListener value="#{player}" target="#{playerDetailController.player}"/>
                                </h:commandLink>

                                <h:commandLink action="profile?faces-redirect=true" styleClass="box-action">
                                    <i data-feather="info"></i>
                                    <f:ajax execute="@this" render="@none"/>
                                    <f:setPropertyActionListener value="#{player}" target="#{profileBean.player}"/>
                                </h:commandLink>
                            </qc:playerbox>

                        </ui:repeat>
                    </ui:repeat>

                </h:panelGroup>
                <qc:collectionEmpty collection="#{allPlayersBean.paginator.parts}" text="No players found"/>

                <qc:paginator paginator="#{allPlayersBean.paginator}" update=":form:players"/>

            </h:panelGroup>

        </h:form>

    </ui:define>

    <ui:define name="modals">
        <h:form id="modals">
            <qc:modal id="addPlayer"
                      target="addPlayer"
                      title="Add Player"
                      update=":form:players :modals:addPlayer:body :modals:addPlayer:footer"
                      bodyId="body" footerId="footer"
                      disableConfirm="#{!addPlayerBean.validateInput()}"
                      abortAction="#{addPlayerBean.clear}"
                      closeAction="#{addPlayerBean.clear}"
                      confirmAction="#{addPlayerBean.addUser}"
                      confirm="Save Player" abort="Cancel"
                      rendered="#{sessionInfoBean.hasRole('MANAGER')}">
                <h:inputText p:placeholder="Username" styleClass="form-control" p:autocomplete="new-username"
                             value="#{addPlayerBean.username}">
                    <f:ajax event="keyup" execute="@this" render=":modals:addPlayer:footer"/>
                </h:inputText>

                <!-- TODO password field + pw repeat + pw strength indicator (like manager signup) -->
                <h:inputSecret p:autocomplete="new-password" p:placeholder="Password" styleClass="form-control"
                               value="#{addPlayerBean.password}">
                    <f:ajax event="keyup" execute="@this" render=":modals:addPlayer:footer"/>
                </h:inputSecret>
                <h:inputSecret p:autocomplete="off" p:placeholder="Repeat password" styleClass="form-control"
                               value="#{addPlayerBean.repeatPassword}">
                    <f:ajax event="keyup" execute="@this" render=":modals:addPlayer:footer"/>
                </h:inputSecret>
            </qc:modal>

            <qc:modal id="editPlayer"
                      target="editPlayer"
                      title="Edit Password"
                      confirm="Edit Password"
                      abort="Cancel"
                      bodyId="body" footerId="footer"
                      confirmAction="#{playerDetailController.changePassword}"
                      disableConfirm="#{!playerDetailController.passwordValid}"
                      update="@this :modals:editPlayer:body :modals:editPlayer:footer">
                <h:inputSecret p:placeholder="New password" value="#{playerDetailController.password}" p:autocomplete="new-password" styleClass="form-control">
                    <f:ajax event="keyup" execute="@this" render=":modals:editPlayer:footer"/>
                </h:inputSecret>
                <h:inputSecret p:placeholder="Repeat new password" value="#{playerDetailController.repeatPassword}" p:autocomplete="new-password" styleClass="form-control">
                    <f:ajax event="keyup" execute="@this" render=":modals:editPlayer:footer"/>
                </h:inputSecret>
            </qc:modal>

            <qc:modal id="deletePlayer"
                      target="deletePlayer"
                      title="Delete Player"
                      confirm="Delete Player"
                      confirmButton="btn btn-danger"
                      abortButton="btn btn-secondary"
                      abort="Cancel"
                      confirmAction="#{playerDetailController.deletePlayer(allPlayersBean)}"
                      update="@this :form:players">
                Are you sure? This cannot be undone.
            </qc:modal>
        </h:form>
    </ui:define>

    <ui:define name="site-specific-javascript">
        <script type="text/javascript" src="/resources/quizconnect/js/scroll.js"></script>
        <script type="text/javascript">
            const sl = new ScrollLoader('.load');
            sl.init();
        </script>
    </ui:define>
</ui:composition>