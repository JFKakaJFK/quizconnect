<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:qc="http://java.sun.com/jsf/composite/quizconnect"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://xmlns.jcp.org/jsf/passthrough"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xml:lang="en"
      lang="en">
<h:head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"/>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous"/>
    <link rel="stylesheet" type="text/css" href="resources/css/main.css" />

    <title>Title</title>
</h:head>
<h:body>
    <qc:stat label="accuracy" value="#{1034}%" size="lg" align="left" />

    <h:form enctype="multipart/form-data">

        <h:commandLink p:class="ml-2" p:data-toggle="modal" p:data-target="#myModal" p:data-backdrop="static">
            Open Modal
            <f:ajax execute="@form" render="myModal" />
        </h:commandLink>


        <script type="text/javascript" src="/resources/quizconnect/js/QCUpload.js"></script>
        <qc:upload id="upload1" listener="#{QCUploadTestController.handleFileUpload}" target="#{QCUploadTestController.file}"  accept="image/*"/>


        <qc:upload listener="#{QCUploadTestController.handleFileUpload}" target="#{QCUploadTestController.file}"  accept="text/csv"/>

        <h:panelGroup layout="block" id="repeat">
            <ui:repeat value="#{testBean.paginator.model}" var="listItem">
                <div>
                    <h:outputText value="#{listItem}"/>
                </div>
            </ui:repeat>


            <h:commandButton value="&lt; prev" action="#{testBean.paginator.prev}">
                <f:ajax execute="@this" render="repeat"/>
            </h:commandButton>
            <h:outputText value="#{testBean.paginator.pageIndex} / #{testBean.paginator.pages}"/>
            <h:commandButton value="next &gt;" action="#{testBean.paginator.next}">
                <f:ajax execute="@this" render="repeat"/>
            </h:commandButton>
            <h:inputHidden value="#{testBean.paginator.pageIndex}"/>
        </h:panelGroup>


        <h:panelGroup layout="block" id="scrollrepeat">

            <div class="" style="display: grid;grid-template-columns: repeat(5, 1fr);">
            <ui:repeat value="#{testBean.scrollPaginator.parts}" var="part">
                <ui:repeat value="#{part.items}" var="item">
                    <div>#{item} - #{randomOnlineTestBean.online}</div>
                </ui:repeat>
            </ui:repeat>
            </div>

            <ui:fragment rendered="#{!testBean.scrollPaginator.initialized}">
            <div class="bottom" style="display: flex;justify-content: center; align-items: center;height: 50vh;">
                <style type="text/css">
                    .loader {
                        padding: 2rem;

                        animation-name: spin;
                        animation-duration: .5s;
                        animation-iteration-count: infinite;
                        animation-timing-function: linear;
                    }

                    @keyframes spin {
                        0% {
                            transform: rotate(0deg);
                        }
                        100% {
                            transform: rotate(359deg);
                        }
                    }
                </style>
                <span class="loader">
                    <svg id="icon" viewBox="0 0 2000 2000" width="30" height="30"><defs><style>.cls-1,.cls-2{fill:none;stroke-miterlimit:10;stroke-width:200px;}.cls-1{stroke:#018786;stroke-dasharray:248.33 19.87;}.cls-2{stroke:#00c4b4;stroke-linecap:round;}.cls-3{fill:#3bc5b5;}</style></defs><circle class="cls-1" cx="1000" cy="1000" r="853.59"/><path class="cls-2" d="M1000,1853.59c-471.42,0-853.59-382.16-853.59-853.59S528.58,146.41,1000,146.41"/><path class="cls-3" d="M1042.58,866.18,1949,1953,898.42,1004.82A100.25,100.25,0,0,1,1032.76,856,109.71,109.71,0,0,1,1042.58,866.18Z"/></svg>
                </span>
                <h:commandButton value="Show more" action="#{testBean.scrollPaginator.initNext}" rendered="#{!testBean.scrollPaginator.initialized}" styleClass="load  btn btn-primary jsf-hide">
                    <f:ajax execute="@this" render="@this scrollrepeat"/>
                </h:commandButton>
            </div>
            </ui:fragment>

        </h:panelGroup>

        <h:panelGroup layout="block" id="players">

            <div class="players">
                <ui:repeat value="#{allPlayersBean.paginator.parts}" var="part">
                    <ui:repeat value="#{part.items}" var="player">
                        <qc:playerbox player="#{player}" online="#{randomOnlineTestBean.online}" rank="Beginner" >
                            <h:link outcome="/players/profile" styleClass="ml-2">
                                <svg viewBox="0 0 24 24" width="24" height="24"><path class="heroicon-ui" d="M12 22a10 10 0 1 1 0-20 10 10 0 0 1 0 20zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm0-9a1 1 0 0 1 1 1v4a1 1 0 0 1-2 0v-4a1 1 0 0 1 1-1zm0-4a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/></svg>
                                <f:param name="id" value="#{player.id}"/>
                            </h:link>
                        </qc:playerbox>
                    </ui:repeat>
                </ui:repeat>
            </div>

            <div style="display: flex;justify-content: center">
                <h:commandButton value="Show more" action="#{allPlayersBean.paginator.initNext}" rendered="#{!allPlayersBean.paginator.initialized}" styleClass="btn btn-primary">
                    <f:ajax execute="@this" render="@this players"/>
                </h:commandButton>
            </div>

        </h:panelGroup>

    </h:form>

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script type="text/javascript" src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script type="text/javascript" src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

    <script type="text/javascript" src="resources/js/util/scroll.js"></script>
    <!--<script type="text/javascript">
      const SELECTOR = document.querySelector('.SELECTOR');
      const bottom = document.querySelector('.bottom');

      const onIntersect = (entries, observer) => {
        console.log('called')
        entries.forEach(e => {
          document.documentElement.scrollTop -= window.innerHeight *.25;
          SELECTOR.click();
        })
      }

      let observer = new IntersectionObserver(onIntersect);

      observer.observe(bottom);
    </script>-->

</h:body>
</html>